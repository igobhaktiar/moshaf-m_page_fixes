import 'dart:convert';

class MoshafPageHeaderService {
  Map<int, List<PageHeader>> pageMap = {};

  void init() {
    pageMap = processData(moshafPageHeaderData);
  }

  // Input data
  List<List<dynamic>> moshafPageHeaderData = [
    [50, 86.65, 71.74, 253.92, 26.90],
    [77, 41.06, 72.85, 253.92, 26.90],
    [106, 86.65, 208.27, 253.92, 26.90],
    [128, 86.65, 71.68, 253.92, 26.90],
    [151, 41.06, 71.64, 253.92, 26.90],
    [177, 41.06, 72.12, 253.92, 26.90],
    [187, 41.06, 72.62, 253.92, 26.90],
    [208, 86.65, 72.29, 253.92, 26.90],
    [221, 41.06, 232.26, 253.92, 26.90],
    [235, 41.06, 289.58, 253.92, 26.90],
    [249, 41.06, 72.55, 253.92, 26.90],
    [255, 41.06, 126.78, 253.92, 26.90],
    [262, 86.65, 72.26, 253.92, 26.90],
    [267, 41.06, 233.81, 253.92, 26.90],
    [282, 86.65, 72.39, 253.92, 26.90],
    [293, 41.06, 318.20, 253.92, 26.90],
    [305, 41.06, 72.18, 253.92, 26.90],
    [312, 86.65, 180.23, 253.92, 26.90],
    [322, 86.65, 72.13, 253.92, 26.90],
    [332, 86.65, 72.27, 253.92, 26.90],
    [342, 86.65, 72.36, 253.92, 26.90],
    [350, 86.65, 72.35, 253.92, 26.90],
    [359, 41.06, 343.05, 253.92, 26.90],
    [367, 41.06, 72.28, 253.92, 26.90],
    [377, 41.06, 72.30, 253.92, 26.90],
    [385, 41.06, 262.43, 253.92, 26.90],
    [396, 86.65, 261.27, 253.92, 26.90],
    [404, 86.65, 318.55, 253.92, 26.90],
    [411, 41.06, 71.60, 253.92, 26.90],
    [415, 41.06, 72.26, 253.92, 26.90],
    [418, 86.65, 72.13, 253.92, 26.90],
    [428, 86.65, 72.57, 253.92, 26.90],
    [434, 86.65, 263.58, 253.92, 26.90],
    [440, 86.65, 152.74, 253.92, 26.90],
    [446, 86.65, 72.41, 253.92, 26.90],
    [453, 41.06, 72.81, 253.92, 26.90],
    [458, 86.65, 154.95, 253.92, 26.90],
    [467, 41.06, 129.08, 253.92, 26.90],
    [477, 41.06, 72.23, 253.92, 26.90],
    [483, 41.06, 72.45, 253.92, 26.90],
    [489, 41.06, 184.10, 253.92, 26.90],
    [496, 86.65, 72.33, 253.92, 26.90],
    [499, 41.06, 72.24, 253.92, 26.90],
    [502, 86.65, 235.16, 253.92, 26.90],
    [507, 41.06, 72.63, 253.92, 26.90],
    [511, 41.06, 72.72, 253.92, 26.90],
    [515, 41.06, 236.97, 253.92, 26.90],
    [518, 86.65, 72.35, 253.92, 26.90],
    [520, 86.65, 370.55, 253.92, 26.90],
    [523, 41.06, 260.99, 253.92, 26.90],
    [526, 86.65, 72.30, 253.92, 26.90],
    [528, 86.65, 313.76, 253.92, 26.90],
    [531, 41.06, 183.48, 253.92, 26.90],
    [534, 86.65, 234.43, 253.92, 26.90],
    [537, 41.06, 344.13, 253.92, 26.90],
    [542, 86.65, 72.07, 253.92, 26.90],
    [545, 41.06, 234.31, 253.92, 26.90],
    [549, 41.06, 72.22, 253.92, 26.90],
    [551, 41.06, 235.44, 253.92, 26.90],
    [553, 41.06, 72.35, 253.92, 26.90],
    [554, 86.65, 235.97, 253.92, 26.90],
    [556, 86.65, 72.47, 253.92, 26.90],
    [558, 86.65, 72.47, 253.92, 26.90],
    [560, 86.65, 72.35, 253.92, 26.90],
    [562, 86.65, 71.84, 253.92, 26.90],
    [564, 86.65, 210.87, 253.92, 26.90],
    [566, 86.65, 315.54, 253.92, 26.90],
    [568, 86.65, 290.94, 253.92, 26.90],
    [570, 86.65, 181.20, 253.92, 26.90],
    [572, 86.65, 72.53, 253.92, 26.90],
    [574, 86.65, 72.21, 253.92, 26.90],
    [575, 41.06, 261.64, 253.92, 26.90],
    [577, 41.06, 205.31, 253.92, 26.90],
    [578, 86.65, 314.61, 253.92, 26.90],
    [580, 86.65, 234.73, 253.92, 26.90],
    [582, 86.65, 72.61, 253.92, 26.90],
    [583, 41.06, 262.76, 253.92, 26.90],
    [585, 41.06, 72.29, 253.92, 26.90],
    [586, 86.65, 101.52, 253.92, 26.90],
    [587, 41.06, 72.41, 253.92, 26.90],
    [587, 41.06, 369.74, 253.92, 26.90],
    [589, 41.06, 128.02, 253.92, 26.90],
    [590, 86.65, 101.88, 253.92, 26.90],
    [591, 41.06, 72.22, 253.92, 26.90],
    [591, 41.06, 315.97, 253.92, 26.90],
    [592, 86.65, 180.14, 253.92, 26.90],
    [593, 41.06, 126.92, 253.92, 26.90],
    [594, 86.65, 209.23, 253.92, 26.90],
    [595, 41.06, 101.49, 253.92, 26.90],
    [595, 41.06, 343.01, 253.92, 26.90],
    [596, 86.65, 206.86, 253.92, 26.90],
    [596, 86.65, 394.15, 253.92, 26.90],
    [597, 41.06, 129.08, 253.92, 26.90],
    [597, 41.06, 288.41, 253.92, 26.90],
    [598, 86.65, 154.81, 253.92, 26.90],
    [598, 86.65, 291.55, 253.92, 26.90],
    [599, 41.06, 208.85, 253.92, 26.90],
    [599, 41.06, 369.91, 253.92, 26.90],
    [600, 86.65, 153.95, 253.92, 26.90],
    [600, 86.65, 339.92, 253.92, 26.90],
    [601, 41.06, 72.34, 253.92, 26.90],
    [601, 41.06, 181.43, 253.92, 26.90],
    [601, 41.06, 344.32, 253.92, 26.90],
    [602, 86.65, 72.23, 253.92, 26.90],
    [602, 86.65, 210.81, 253.92, 26.90],
    [602, 86.65, 369.82, 253.92, 26.90],
    [603, 41.06, 71.65, 253.92, 26.90],
    [603, 41.06, 208.52, 253.92, 26.90],
    [603, 41.06, 342.85, 253.92, 26.90],
    [604, 86.65, 71.63, 253.92, 26.90],
    [604, 86.65, 181.29, 253.92, 26.90],
    [604, 86.65, 317.24, 253.92, 26.90],
  ];

  Map<int, List<PageHeader>> processData(List<List<dynamic>> data) {
    Map<int, List<PageHeader>> pageMap = {};

    // Group the data by page number
    for (var entry in data) {
      int page = entry[0];
      double x = entry[1];
      double y = entry[2];
      double width = entry[3];
      double height = entry[4];

      PageHeader header = PageHeader(x: x, y: y, width: width, height: height);

      // If the page doesn't exist in the map, create a new entry
      if (!pageMap.containsKey(page)) {
        pageMap[page] = [];
      }

      // Add the PageHeader to the respective page
      pageMap[page]!.add(header);
    }

    return pageMap;
  }
}

class PageHeader {
  final double x;
  final double y;
  final double width;
  final double height;

  PageHeader({
    required this.x,
    required this.y,
    required this.width,
    required this.height,
  });

  factory PageHeader.fromRawJson(String str) =>
      PageHeader.fromJson(json.decode(str));

  String toRawJson() => json.encode(toJson());

  factory PageHeader.fromJson(Map<String, dynamic> json) => PageHeader(
        x: json["x"]?.toDouble(),
        y: json["y"]?.toDouble(),
        width: json["width"]?.toDouble(),
        height: json["height"]?.toDouble(),
      );

  Map<String, dynamic> toJson() => {
        "x": x,
        "y": y,
        "width": width,
        "height": height,
      };
}
